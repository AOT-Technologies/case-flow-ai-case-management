name: caseflow web openshift build

on:
  workflow_dispatch:
    inputs:
      START_BUILD:
        required: true
        type: boolean
        description: This value is ignored, just to trigger dispatch.
      environment:
        description: "Environment"
        required: true
        type: environment
  push:
    branches:
      - dev
      - master
      
    # paths:
    #   #- 'app/**'
    # #   - 'frontend/**'
    # #   - 'forms-flow-ai/**'
    # #   - '.github/workflows/**'

defaults:
  run:
    shell: bash
    working-directory: ./app/caseflow_web
env:
  APP_NAME: "caseflow-web"

jobs:
  caseflow-web-push:
    runs-on: ubuntu-20.04
    environment: ${{ inputs.environment }}

    # if: github.repository == 'github.com/aot-technologies/case-flow-ai-case-management'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: "./app/caseflow_web/package-lock.json"
      - run: npm install --force
        working-directory: ./app/caseflow_web
      - run: CI=false npm run build
        working-directory: ./app/caseflow_web

      
      - name: Set ENV variables
        id: set-variable
        # make sure to update the TOOLS_NAME once all the environment for forms-flow-ai-web is ready
        run: |
          if [ '${{ github.ref_name }}' == 'master' ]; then
            echo "For ${{ github.ref_name }} branch"
            echo "TOOLS_NAME=${{secrets.OC_NAMESPACE_NAMEPLATE}}" >> $GITHUB_ENV
            echo "TAG_NAME="dev"" >> $GITHUB_ENV
            echo "BRANCH_NAME="master"" >> $GITHUB_ENV
            echo "ENV_NAME="dev"" >> $GITHUB_ENV
          elif [ '${{ github.ref_name }}' == 'main' ]; then
            echo "For ${{ github.ref_name }} branch"
            echo "TOOLS_NAME=${{secrets.OC_NAMESPACE_NAMEPLATE}}" >> $GITHUB_ENV
            echo "TAG_NAME="test"" >> $GITHUB_ENV
            echo "BRANCH_NAME="main"" >> $GITHUB_ENV
            echo "ENV_NAME="test"" >> $GITHUB_ENV
          else
            echo "For ${{ github.ref_name }} branch, defaulting to dev values"
            echo "TOOLS_NAME=${{secrets.OC_NAMESPACE_NAMEPLATE}}" >> $GITHUB_ENV
            echo "TAG_NAME="dev"" >> $GITHUB_ENV
            echo "BRANCH_NAME="dev"" >> $GITHUB_ENV
            echo "ENV_NAME="tools"" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OC_SERVER}} --token=${{secrets.OC_TOKEN}}
      - name: Tools project
        shell: bash
        run: |
          oc project ${{ secrets.OC_NAMESPACE_NAMEPLATE }}-tools
      # Build from either dev or main branch as appropriate
      - name: Build from ${{ github.ref_name }} branch
        shell: bash
        run: |
          oc patch bc/${{ env.APP_NAME }}-build -p '{"spec":{"source":{"git":{"ref":"${{ github.ref_name }}"}}}}'
      - name: Start Build Openshift
        shell: bash
        run: |
          oc start-build ${{ env.APP_NAME }}-build --wait
      - name: Tag+Deploy for ${{ inputs.environment }}
        shell: bash
        run: |
          oc tag ${{ env.APP_NAME }}:latest ${{ env.APP_NAME }}:${{ inputs.environment }}