apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "Caseflow-gateway"
    tags: "caseflow-backend"
    iconClass: icon-js
labels:
  app: ${NAME}-${COMPONENT}
  app.kubernetes.io/part-of: ${NAME}-${COMPONENT}
parameters:
- name: NAME
  description: Module name
  value: caseflow
- name: COMPONENT
  description: Component name
  value: backend-gateway
- name: IMAGE_TAG
  description: Image tag to use
  value: latest
- name: DOMAIN
  value: apps.silver.devops.gov.bc.ca
- name: CPU_REQUEST
  value: "125m"
- name: MEMORY_REQUEST
  value: "150Mi"
- name: CPU_LIMIT
  value: "275m"
- name: MEMORY_LIMIT
  value: "450Mi"
- name: MIN_REPLICAS
  description: The minimum amount of replicas
  value: "1"
- name: MAX_REPLICAS
  description: The maximum amount of replicas
  value: "3"
- name: CONTAINER_PORT
  description: The port on which the application will be accessible
  required: true
- name: REGISTRY
  description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
  value: ghcr.io
- name: PROMOTE
  description: Image (namespace/name:tag) to promote/import
  value: aot-technologies/case-flow-ai-case-management/app/caseflow_core/microservices/gateway
- name: ENV
  description: The Environment on which it is deployed
  required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: ${IMAGE_TAG}
      from:
        kind: DockerImage
        name: ${REGISTRY}/${PROMOTE}:${IMAGE_TAG}
      referencePolicy:
        type: Local
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    replicas: 1
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}-${COMPONENT}
        from:
          kind: ImageStreamTag
          name: ${NAME}-${COMPONENT}:${IMAGE_TAG}
    selector:
      deploymentconfig: ${NAME}-${COMPONENT}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${NAME}-${COMPONENT}
          deploymentconfig: ${NAME}-${COMPONENT}
      spec:
        containers:
        - image: " "
          imagePullPolicy: Always
          name: ${NAME}-${COMPONENT}
          env:
          - name: CASE_SUBGRAPH_URL
            valueFrom:
              configMapKeyRef:
                name: caseflow-gateway
                key: CASE_SUBGRAPH_URL
          - name: DOCUMENT_SUBGRAPH_URL
            valueFrom:
              configMapKeyRef:
                name: caseflow-gateway
                key: DOCUMENT_SUBGRAPH_URL

          ports:
          - containerPort: ${{CONTAINER_PORT}}
            protocol: TCP
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          # readinessProbe:
- apiVersion: v1
  #   tcpSocket:
  #     path: /
  #     port: ${{CONTAINER_PORT}}
  #     scheme: HTTP
  #   initialDelaySeconds: 10
  #   periodSeconds: 30
  #   timeoutSeconds: 5
  #   failureThreshold: 30
  #   successThreshold: 1
  # livenessProbe:
  #   successThreshold: 1
  #   failureThreshold: 3
  #   httpGet:
  #     path: /
  #     port: ${{CONTAINER_PORT}}
  #     scheme: HTTP
  #   initialDelaySeconds: 10
  #   periodSeconds: 30
  #   timeoutSeconds: 5
  kind: Service
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    ports:
    - name: ${CONTAINER_PORT}-tcp
      protocol: TCP
      port: 80
      targetPort: ${{CONTAINER_PORT}}
    selector:
      deploymentconfig: ${NAME}-${COMPONENT}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    host: ${NAME}-${COMPONENT}-${ENV}.${DOMAIN}
    port:
      targetPort: ${CONTAINER_PORT}-tcp
    to:
      kind: Service
      name: ${NAME}-${COMPONENT}
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: "${NAME}-${COMPONENT}"
  spec:
    scaleTargetRef:
      apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      name: "${NAME}-${COMPONENT}"
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 100
